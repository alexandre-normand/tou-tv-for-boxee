<?xml version="1.0"?>
<window type="window" id="14000">
	<defaultcontrol always="true">120</defaultcontrol>
	<allowoverlay>no</allowoverlay>
	<onload lang="python"><![CDATA[
import re
import util
import operator
mc.ShowDialogWait()

window = mc.GetWindow(14000)
itemlist = window.GetList(120)

# make sure app has not been loaded yet
if not itemlist.GetItems():
	mc.LogDebug("App is NOT initialized...loading...")
	
	genres = util.getGenres()
	
	#shows = util.getShowsFromCache()
	#shows = sorted(shows, key=operator.attrgetter('name'))
	
	#items = util.getShowListItems(shows)
	items = util.getGenreListItems(genres)
	itemlist.SetItems(items)
	itemlist.SetFocusedItem(0)
else:
	firstItem = itemlist.GetItem(0)
	if firstItem.GetProperty("isFilter") == "true":
		genres = util.getGenres()
		items = util.getGenreListItems(genres)
		itemlist.SetItems(items)
		itemlist.SetFocusedItem(0)
	mc.LogDebug("App has already been loaded, skipping...")
mc.HideDialogWait()
]]></onload>
	<controls>
		<control type="image">
			<width>1280</width>
			<height>720</height>
			<texture>black.png</texture>
		</control>
		<control type="image" id="102">
			<width>1280</width>
			<height>720</height>
			<texture>bc_background_plain.png</texture>
		</control>
		<control type="group">
			<control type="image">
				<visible>false</visible>
				<width>1280</width>
				<height>50</height>
				<texture>black.png</texture>
				<animation effect="fade" end="50" time="0" condition="true">Conditional</animation>
			</control>
			<control type="largeimage">
				<visible>!Container(120).IsLoading + !Container(120).IsEmpty</visible>
				<posy>0</posy>
				<posx>0</posx>
				<width>1280</width>
				<fadetime>200</fadetime>
				<aspectratio>scale</aspectratio>
				<info>Container(120).Listitem.property(custom:background)</info>
			</control>
			<control type="label" id="100">
				<posx>24</posx>
				<posy>10</posy>
				<width>400</width>
				<height>100</height>
				<align>left</align>
				<!--<textcolor>white</textcolor>-->
				<textcolor>BBE21F26</textcolor>
				<font>sans28</font>
				<label>[B]tou.tv[/B]</label>
				<animation effect="fade" end="30" time="0" condition="true">Conditional</animation>
			</control>
		</control>
		<control type="group">
			<visible>!Container(120).IsLoading + !Container(120).IsEmpty</visible>
			<posx>40</posx>
			<posy>125</posy>
			<control type="fixedlist" id="120">
				<width>670</width>
				<height>520</height>
				<onup>-</onup>
				<ondown>-</ondown>
				<onleft>-</onleft>
				<onright>300</onright>
				<scrolltime>200</scrolltime>
				<pagecontrol>60</pagecontrol>
				<focusposition>2</focusposition>
				<orientation>vertical</orientation>
				<itemlayout width="670" height="46">
					<control type="label">
						<posx>40</posx>
						<width>670</width>
						<height>30</height>
						<align>left</align>
						<font>sans28</font>
						<label>$INFO[ListItem.title] (S$INFO[ListItem.season]E$INFO[ListItem.episode])</label>
						<visible>!IsEmpty(Container(120).Listitem.title) + !IsEmpty(Container(120).Listitem.season) + !IsEmpty(Container(120).Listitem.episode)</visible>
						<animation effect="fade" end="30" time="0" condition="true">Conditional</animation>
					</control>
					<control type="label">
						<posx>40</posx>
						<width>670</width>
						<height>30</height>
						<align>left</align>
						<font>sans28</font>
						<label>$INFO[ListItem.title]</label>
						<visible>!IsEmpty(Container(120).Listitem.title) + IsEmpty(Container(120).Listitem.season)</visible>
						<animation effect="fade" end="30" time="0" condition="true">Conditional</animation>
					</control>
					<control type="label">
						<posx>40</posx>
						<width>670</width>
						<height>30</height>
						<align>left</align>
						<font>sans28</font>
						<label>$INFO[ListItem.Label]</label>
						<visible>IsEmpty(Container(120).Listitem.title)</visible>
						<animation effect="fade" end="30" time="0" condition="true">Conditional</animation>
					</control>
				</itemlayout>
				<focusedlayout width="670" height="50">
					<control type="label" id="5656">
						<posx>40</posx>
						<width>670</width>
						<height>30</height>
						<align>left</align>
						<font>sans28</font>
						<label>$INFO[ListItem.title] (S$INFO[ListItem.season]E$INFO[ListItem.episode])</label>
						<textcolor>white</textcolor>
						<scroll>true</scroll>
			            <animation type="Focus">
			                <effect type="fade" start="30" end="100" time="200"/>
							<effect type="zoom" center="200,0" start="100" end="120" time="200" />
			            </animation>
			            <animation type="UnFocus">
			                <effect type="fade" start="200" end="30" time="200"/>
							<effect type="zoom" center="200,0" start="120" end="100" time="200" delay="100" />
			            </animation>
			            <visible>!IsEmpty(Container(120).Listitem.title) + !IsEmpty(Container(120).Listitem.season) + !IsEmpty(Container(120).Listitem.episode)</visible>
					</control>
					<control type="label" id="5656">
						<posx>40</posx>
						<width>670</width>
						<height>30</height>
						<align>left</align>
						<font>sans28</font>
						<label>$INFO[ListItem.title]</label>
						<textcolor>white</textcolor>
						<scroll>true</scroll>
			            <animation type="Focus">
			                <effect type="fade" start="30" end="100" time="200"/>
							<effect type="zoom" center="200,0" start="100" end="120" time="200" />
			            </animation>
			            <animation type="UnFocus">
			                <effect type="fade" start="200" end="30" time="200"/>
							<effect type="zoom" center="200,0" start="120" end="100" time="200" delay="100" />
			            </animation>
			            <visible>!IsEmpty(Container(120).Listitem.title) + IsEmpty(Container(120).Listitem.season)</visible>
					</control>
					<control type="label" id="5656">
						<posx>40</posx>
						<width>670</width>
						<height>30</height>
						<align>left</align>
						<font>sans28</font>
						<info>Listitem.Label</info>
						<textcolor>white</textcolor>
						<scroll>true</scroll>
			            <animation type="Focus">
			                <effect type="fade" start="30" end="100" time="200"/>
							<effect type="zoom" center="200,0" start="100" end="120" time="200" />
			            </animation>
			            <animation type="UnFocus">
			                <effect type="fade" start="200" end="30" time="200"/>
							<effect type="zoom" center="200,0" start="120" end="100" time="200" delay="100" />
			            </animation>
			            <visible>IsEmpty(Container(120).Listitem.title)</visible>
					</control>
				</focusedlayout>
				<content type="url" url="">
					<onclick lang="python"><![CDATA[
win = mc.GetActiveWindow()
itemlist = win.GetList(120)
item = itemlist.GetItem(itemlist.GetFocusedItem())
if item.GetProperty("isFilter") == "true":
	mc.ShowDialogWait()
	win.PushState()
	filterShowsPath = item.GetPath()
	shows = []
	if filterShowsPath == util.INTERNAL_RECENTLY_VIEWED:
		shows = util.loadRecentlyViewedShows()
	else:
		shows = util.fetchShows(filterShowsPath)
		shows = sorted(shows, key=operator.attrgetter('name'))
	
	items = util.getShowListItems(shows)
	itemlist.SetItems(items)
	itemlist.SetFocusedItem(0)
	mc.HideDialogWait()
elif item.GetMediaType() == mc.ListItem.MEDIA_UNKNOWN:
	mc.ShowDialogWait()	
	win.PushState()	
	show = util.Show()
	show.path = item.GetPath()
	show.name = item.GetLabel()
	episodes = util.fetchShowEpisodes(show)
	sorted_episodes = sorted(episodes, key=operator.attrgetter('episode'), reverse=True)
	sorted_seasons = sorted(sorted_episodes, key=operator.attrgetter('season'), reverse=True)	
	items = util.getEpisodeListItems(show, sorted_seasons)
	itemlist.SetItems(items)
	mc.LogDebug("checking if everything is there:")
	items = itemlist.GetItems()
	for item in items:
		mc.LogDebug("label:" + item.GetLabel() + ", path:" + item.GetPath() + ", thumb:" + item.GetThumbnail() + ", title: " + item.GetTitle() + ", background: " + item.GetProperty("background"))
	itemlist.SetFocusedItem(0)
	mc.HideDialogWait()
else:
	mc.ShowDialogWait()	
	util.addVideoDataToItem(item)
	show = util.Show()
	show.name = item.GetTVShowTitle()
	show.path = item.GetProperty("show.path")
	util.addShowToRecentList(show)
	mc.HideDialogWait()		
	mc.GetPlayer().PlayWithActionMenu(item)
]]></onclick>
				</content>
			</control>
		</control>
		<control type ="group">
			<visible>!Container(120).IsLoading + !Container(120).IsEmpty</visible>
			<posx>860</posx>
			<posy>80</posy>
			<control type="image">
				<posy>0</posy>
				<posx>0</posx>
				<width>288</width>
				<height>162</height>
				<bordersize>4</bordersize>
				<bordertexture>black.png</bordertexture>
				<aspectratio align="center">keep</aspectratio>
				<info>Container(120).Listitem.thumb</info>
			</control>	
		</control>
		<control type="label">
			<posx>24</posx>
			<posy>65</posy>
			<width>670</width>
			<height>100</height>
			<align>left</align>
			<textcolor>BBE21F26</textcolor>
			<font>sans28</font>
			<label>[B]$INFO[Container(120).Listitem.tvshowtitle][/B]</label>
			<visible>!IsEmpty(Container(120).Listitem.tvshowtitle)</visible>
		</control>		
		<control type="group">
			<posy>272</posy>
			<posx>840</posx>
			<visible>!Container(120).IsLoading + !Container(120).IsEmpty</visible>	
			<control type="label">
				<posx>0</posx>
				<posy>0</posy>
				<width>340</width>
				<height>200</height>
				<font>sans21</font>
				<align>left</align>
				<aligny>top</aligny>
				<wrapmultiline>true</wrapmultiline>
				<info>Container(120).Listitem.property(description)</info>
				<visible>!IsEmpty(Container(120).Listitem.property(description))</visible>
			</control>
		</control>
		<control type="group">
			<animation effect="fade" start="0" end="70" time="200" condition="Container(120).IsLoading | Container(120).IsEmpty">Conditional</animation>
			<animation effect="fade" start="70" end="0" time="200" condition="!Container(120).IsLoading + !Container(120).IsEmpty">Conditional</animation>
			<control type="image">
				<visible></visible>
				<width>1280</width>
				<height>720</height>
				<texture>black.png</texture>
			</control>			
		</control>
	</controls>
</window>

